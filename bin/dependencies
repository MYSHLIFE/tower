#!/usr/bin/env node

// process.env.NODE_PATH.split(':'), process.config.variables.node_prefix
// global npm on windows: C:\Program Files (x86)\nodejs\node_modules\
// global node on windows: process.execPath == C:\Program Files (x86)\nodejs\node.exe
// if process.cwd().match(dirname(process.execPath)) then maybe assume it's npm install -g
var fs = require('fs');
var path = require('path');


// @todo normalize install/global directories in a more robust way, for comparison.
function normalize(directory) {
  return directory.split(path.sep).slice(0, 3).join(path.sep);
}

function uniq(array) {
  return Object.keys(arrayToHash(array));
};

function arrayToHash(array) {
  var hash = {};

  array.forEach(function(item) {
    if (!hash[item]) {
      hash[item] = true;
    }
  });

  return hash;
}

// Old code, but maybe useful later.
//
// '/usr/local/lib/node_modules/tower' => '/usr/local'
// 'C:\Program Files (x86)\nodejs\node_modules\tower' => 'C:\Program Files (x86)\nodejs'
//var installDirectory = normalize(process.cwd());
// '/usr/local/Cellar/node/0.8.2/bin'
//var globalDirectory = normalize(path.dirname(process.execPath));
//var isGlobal = installDirectory === globalDirectory;

// this lets us know if we ran `npm install` vs. `npm link tower`, etc.
// the ORIGINAL npm command args
var npmArgs;
if (process.env.npm_config_argv) {
  npmArgs = JSON.parse(process.env.npm_config_argv).original;
} else {
  npmArgs = [];
}
var npmOptions = arrayToHash(npmArgs);
var isGlobal = !!(npmOptions['-g'] || npmOptions['--global']);
var isGlobalLink = !!(npmArgs[0] == 'link' && npmArgs.length == 1);
var isLocalLink = !!(npmArgs[0] == 'link' && npmArgs.length > 1 && npmArgs[0].charAt(0) != '-');
var isRemote = !!npmArgs.join(' ').match('git://')

var packageJSON = JSON.parse(fs.readFileSync('package.json', 'utf-8'));
var dependencies = [];

var testDependencies = Object.keys(packageJSON['testDependencies']);
var globalDependencies = Object.keys(packageJSON['globalDependencies']);
var localDependencies = Object.keys(packageJSON['localDependencies']);

// if it's installed from the git repo, install everything.
if (!isLocalLink && !isGlobalLink && fs.existsSync('.gitignore')) {
  dependencies = dependencies.concat(testDependencies).concat(globalDependencies).concat(localDependencies);
} else {
  if (isGlobal || isGlobalLink) {
    // if you're installing it globally, only include bare minimum.
    dependencies = dependencies.concat(globalDependencies);
  } else if (isLocalLink) {
    // otherwise install like normal.
    dependencies = dependencies.concat(localDependencies);
  }
  // if installing from github, you'll have to compile the source.
  if (isRemote) {
    dependencies.push('coffee-script@>=1.3.3'); 
  }
}

if (dependencies && dependencies.length) {
  process.stdout.write('npm install ' + uniq(dependencies).join(' '));
} else {
  // console.log('linked to local');
}
