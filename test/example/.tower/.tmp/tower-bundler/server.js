function Bundler(){this.extensions={}}var fs=require("fs"),path=require("path"),UglifyJS=require("uglify-js"),wrench=require("wrench"),util=require("util"),glob=require("glob");Config={_prev:[],_platform:"",_getPrev:function(i){return i?this._prev[this._prev.length-1-i]:this._prev[this._prev.length-1]},_settings:{}},Config.get=function(){var args=arguments,s=this._settings;args[0]instanceof Array&&(args=args[0]);var prev=s[args[0]]?s[args[0]]:!1,n=args.length;if(1===n)return prev;if(prev!==!1){for(var i=1;n>i;i++)prev=prev[args[i]];return prev}},Config.path=function(p){return this._settings[this._platform].path=p,this},Config.js=function(){return this._prev.push("js"),this._platform="js",this._settings.js||(this._settings.js={}),this},Config.css=function(){return this._prev.push("css"),this._platform="css",this._settings.css||(this._settings.css={}),this},Config.compiler=function(){return this._prev.push("compiler"),this._settings.js||(this._settings.js={}),this},Config.type=function(type){this._prev.push("type");var prev=this._prev[this._prev.length-3];if(!prev||!this._compiler[prev])throw Error("The current bundler configuration is has incorrect syntax. Make sure you're using each method in the correct order.");return this._compiler[prev].type=type,this},Bundler._instance=null,Bundler.prototype.compile=function(options){options.path=options.path+"."+options.extension,fs.writeFileSync(options.path,options.data.toString("utf-8")),this._resources.push(options)},Bundler.prototype.addResource=function(options){this.compile(options)},Bundler.prototype.registerExtension=function(type,callback){this.extensions[type]=callback},Bundler.prototype.build=function(package){var self=this,pkg=Tower.Packager.get(package);this.checkOutputValidity(),fs.existsSync(path.join(_root,this.output.js,package))||fs.mkdirSync(path.join(_root,this.output.js,package)),pkg._files.forEach(function(file){if(("client"===file.type||"*"===file.type)&&file.file.match(/\.js$/)&&fs.existsSync(path.join(pkg.path,file))){var contents=fs.readFileSync(path.join(pkg.path,file.file),"utf-8");fs.writeFileSync(path.join(_root,self.output.js,package,file.file),contents,"utf-8"),self.addFileLock(package,path.join(_root,self.output.js,package,file.file),path.join(self.output.js,package,file.file),"js")}})},Bundler.prototype.start=function(){this.watch()},Bundler.prototype.watch=function(){function stripFilename(filename){return filename.replace(RegExp(Tower.path),"")}var self=this,_watchPackages=[];Tower.Packager._paths.forEach(function(i){_watchPackages.push(path.join(i,"**","*"))}),Tower.watch(_watchPackages).on("all",function(event,file){var pkg=Tower.Packager.matchFilename(file),begLogStr="File "+event;return pkg?(log(begLogStr.bold+"\n		      "+">> ".blue+"Name:".underline+' "'+stripFilename(file)+'"'+"\n		      "+">> ".blue+"Package:".underline+' "'+pkg.name+'"'),self.fileChanged(pkg.name,file),void 0):!1}).on("error",function(error){log("Error",error)}).on("ready",function(){log("Watching Files...".bold)}).start()},Bundler.prototype.config=function(callback){callback.apply(Config,[Config])},Bundler.prototype.fileChanged=function(packageName,filename){function Compress(code){var ast=UglifyJS.parse(code);ast.figure_out_scope();var compressor=UglifyJS.Compressor({});return ast=ast.transform(compressor),ast.print_to_string()}var self=this,extension=filename.match(/[.](.+)$/)[1];if(this.extensions[extension]){var filenameWithoutExt=filename.replace(/[.](.+)$/,"")+".",obj=this.extensions[extension].apply(this,[filenameWithoutExt,packageName]),minimalFileName=filename.match(RegExp("("+_.regexpEscape(packageName)+".+)"))[1];"js"===extension&&(obj.data?self.buildFile(minimalFileName,Compress(obj.data)):fs.readFile(obj.filename,"utf8",function(err,contents){if(err)throw Error(err);self.buildFile(minimalFileName,Compress(contents))}))}},Bundler.prototype.buildFile=function(filename,contents){function makeDir(p){fs.exists(p,function(e){e?fs.writeFile(finalPath,contents,"utf8",function(err){if(err)throw Error(err);self.buildCache()}):fs.mkdir(p,function(err){if(err)throw Error(err);console.log(1),makeDir(p.substring(0,p.lastIndexOf("/")))})})}var self=this,finalPath=path.join(Tower.cwd,".tower",".tmp",filename);makeDir(finalPath.substring(0,finalPath.lastIndexOf("/")))},Bundler.prototype.buildCache=function(){var cp=require("child_process").spawn,ls=cp("node",[path.join(__dirname,"build.js"),Tower.cwd,Tower.path]);ls.stdout.on("data",function(data){console.log(""+data)}),ls.stderr.on("data",function(data){console.log(""+data)}),ls.on("exit",function(){console.log("exit")})},Bundler.prototype.extend=function(callback){return callback.apply(this),this},Bundler.prototype.createExtension=function(extension,callback){return this.extensions[extension]=callback,this},Bundler.prototype.extension=function(){return this},Bundler.create=function(){return this._instance=new Bundler,this._instance},Bundler.run=function(){if(!this._instance)return!1;if(log("Bundler Running".bold),log("Environment: ".bold+(Tower.env.charAt(0).toUpperCase()+Tower.env.slice(1)).underline),"development"==Tower.env){var p=path.join(Tower.cwd,".tower");fs.existsSync(p)||fs.mkdirSync(p);var temp=path.join(p,".tmp");fs.existsSync(temp)||fs.mkdirSync(temp);var file=path.join(p,"cache.json");fs.existsSync(file)||fs.writeFileSync(file,JSON.stringify({resources:[{type:"js",group:[]},{type:"css",group:[]}]}),"utf-8"),this._instance.watch()}},Tower.export(Bundler);