require('design.io').extension('watchfile')

File  = require('pathfinder').File
Shift = require('shift')

require("design.io-stylesheets")
  compress: false
  debug:    false
  ignore:   /(public|node_modules)/
  outputPath: (path) ->
    "public/stylesheets/#{path}".replace(/\.(sass|scss|stylus|styl|less|css)/, ".css")

require("design.io-javascripts")
  compress: false
  debug:    false
  ignore:   /(public|node_modules|server|test.*|spec.*[sS]pec)/
  outputPath: (path) ->
    "public/javascripts/#{path}".replace(/\.(js|coffee)/, ".js")

watch /app\/views\/*.coffee/
  update: (path, callback) ->
    nodes = path.replace("app/views", "").split("/")
    name  = {}
    
    data  = File.read(path)
    
    @broadcast body: data, id: id, selector: selector, path: "/#{name}"
    
    files   = File.files("app/views")
    result  = {}
    
    for file in files
      continue unless file.match(/\.coffee$/)
      result[File.basename(file, File.extname(file))] = File.read(file)
    
    engine = new Shift.CoffeeScript
    engine.render "Tower.View.cache = #{JSON.stringify(result)}", (error, templates) ->
      if error
        console.log error
      else
        File.write "public/javascripts/app/views/templates.js", templates
        
        callback()
    
  client:
    update: (data) ->
      Tower.View.cache[data.id] = data
      
      if data.reload
        window.location = data.path
      else
        Tower.get data.path